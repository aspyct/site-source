<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: mobile | Aspyct.org]]></title>
  <link href="http://aspyct.github.com/aspyct/blog/categories/mobile/atom.xml" rel="self"/>
  <link href="http://aspyct.github.com/aspyct/"/>
  <updated>2014-02-09T21:36:31+01:00</updated>
  <id>http://aspyct.github.com/aspyct/</id>
  <author>
    <name><![CDATA[Antoine d'Otreppe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android: detecting charge state]]></title>
    <link href="http://aspyct.github.com/aspyct/blog/2013/05/16/android-detecting-charge-state/"/>
    <updated>2013-05-16T22:14:00+02:00</updated>
    <id>http://aspyct.github.com/aspyct/blog/2013/05/16/android-detecting-charge-state</id>
    <content type="html"><![CDATA[<p>Battery is expensive. Not to say that you can't buy one, but you really should use resources wisely when you develop a mobile application. Yet sometimes you need to do some long run process or heavy calculation.</p>

<p>For that matter, Android allows us to detect whether the device is plugged in and charging. Let's see how.</p>

<!-- more -->


<p>One thing we can do is ask whether the device is plugged-in. That can easily be done with a few lines of code.</p>

<p>```java
public void checkBatteryState(View sender) {</p>

<pre><code>IntentFilter filter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);
Intent batteryStatus = registerReceiver(null, filter);

int chargeState = batteryStatus.getIntExtra(BatteryManager.EXTRA_STATUS, -1);
String strState;

switch (chargeState) {
    case BatteryManager.BATTERY_STATUS_CHARGING:
    case BatteryManager.BATTERY_STATUS_FULL:
        strState = "charging";
        break;
    default:
        strState = "not charging";
}

TextView tv = (TextView) findViewById(R.id.textView);
tv.setText(strState);
</code></pre>

<p>}
```</p>

<p>Note that charge efficiency may change according to the type of power source. You may want to investigate the <code>BatteryManager.EXTRA_PLUGGED</code> to get more information.</p>

<p>Astute readers will notice that we used a sticky broadcast to get the status. It means we can also create a <a href="http://developer.android.com/reference/android/content/BroadcastReceiver.html">BroadcastReceiver</a> to monitor changes for the battery status. This is left as an exercise to you, dear reader :)</p>

<p>You can checkout the <a href="https://github.com/aspyct/android-batterycheck">example on github</a>.</p>
]]></content>
  </entry>
  
</feed>
