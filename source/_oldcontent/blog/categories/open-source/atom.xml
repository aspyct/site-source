<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: open source | Aspyct.org]]></title>
  <link href="http://aspyct.github.com/aspyct/blog/categories/open-source/atom.xml" rel="self"/>
  <link href="http://aspyct.github.com/aspyct/"/>
  <updated>2014-02-09T21:36:31+01:00</updated>
  <id>http://aspyct.github.com/aspyct/</id>
  <author>
    <name><![CDATA[Antoine d'Otreppe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[APServiceBox: IoC for your iOS apps]]></title>
    <link href="http://aspyct.github.com/aspyct/blog/2012/08/14/apservicebox-ioc-for-your-ios-apps/"/>
    <updated>2012-08-14T20:38:00+02:00</updated>
    <id>http://aspyct.github.com/aspyct/blog/2012/08/14/apservicebox-ioc-for-your-ios-apps</id>
    <content type="html"><![CDATA[<p>Everytime I make an iOS project, I have a few services that must be passed around to every view controller. What a nightmare!</p>

<p>Well it's over now, and I'm proud to present APServiceBox. Now I can keep things tidy and testable! Read more on its <a href="/apservicebox">dedicated page</a> or jump to the <a href="https://github.com/aspyct/APServiceBox/">github repository</a>.</p>

<p>Tell me what you think :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Inspecting double numbers]]></title>
    <link href="http://aspyct.github.com/aspyct/blog/2012/07/28/inspecting-double-numbers/"/>
    <updated>2012-07-28T16:00:00+02:00</updated>
    <id>http://aspyct.github.com/aspyct/blog/2012/07/28/inspecting-double-numbers</id>
    <content type="html"><![CDATA[<p>While practicing algorithms, I suddenly felt urged to learn more about <a href="http://en.wikipedia.org/wiki/Double-precision_floating-point_format">IEEE 754 double representation</a>. I also made a little tool in C++ to <a href="https://gist.github.com/3194882">display doubles as binary</a>. Check it out :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[The day is over]]></title>
    <link href="http://aspyct.github.com/aspyct/blog/2012/07/16/the-day-is-over/"/>
    <updated>2012-07-16T23:00:00+02:00</updated>
    <id>http://aspyct.github.com/aspyct/blog/2012/07/16/the-day-is-over</id>
    <content type="html"><![CDATA[<p>Yep, the day is over. It's time for me to stop working on the "One Day Server" (cfr. previous post). The project is an HTTP server running on UNIX environments, developed in C. See the <a href="https://github.com/aspyct/ods">sources on github</a>.</p>

<p>So... What has been done ?</p>

<ol>
<li><p>An <strong>asynchronous server base</strong>, primarily intended to serve static files over HTTP. The server is based on epoll(7), and therefore currently available for Linux only. But there is a wrapper around the epoll system, so it shouldn't be too hard to port to other platforms.</p></li>
<li><p>An <strong>abstraction around the epoll() mechanism</strong>, as explained above. It should be easily portable to other systems as well. Have a look at it :)</p></li>
<li><p>An <strong>incremental HTTP parser</strong> that you can feed as you get the data from your client. It will parse the request as it comes, making information available as soon as possible.</p></li>
</ol>


<p>Yes, but...</p>

<p>Ok, it's not really functional yet. First, it doesn't give you back the files, but only a text summary of you request...</p>

<p>```
aspyct@mothbuster:~/[...]$ telnet localhost 3000
Trying 127.0.0.1...
Connected to localhost.
Escape character is '<sup>]'.</sup>
GET /hello/world HTTP/1.1
Taking care of your request:</p>

<pre><code>Method:  GET
URI:     /hello/world
Version: HTTP/1.1
</code></pre>

<p>Connection closed by foreign host.
```</p>

<p>Also, the HTTP request parser is not complete yet, and the system as a whole probably has some memory leaks and security issues... But OK, it's a one-day dev :P And I'm not that far from a working system.</p>

<p>Now what ?</p>

<p>Well I probably won't have time to further develop this server in the next few weeks. But who knows, I might resume development after that :) I'll keep you posted ! Thanks for following me :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[One Day Server challenge]]></title>
    <link href="http://aspyct.github.com/aspyct/blog/2012/07/16/one-day-server-challenge/"/>
    <updated>2012-07-16T10:00:00+02:00</updated>
    <id>http://aspyct.github.com/aspyct/blog/2012/07/16/one-day-server-challenge</id>
    <content type="html"><![CDATA[<p>Hey, today I'm writing a HTTP server in just one day, with what I've learned lately about UNIX development. Follow me here on the <a href="https://github.com/aspyct/ods/">github repository</a> for the project.</p>

<p>I'll keep you posted at the end of the day on this very blog about the result :) Cheers!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Unix semaphores IPC example in C]]></title>
    <link href="http://aspyct.github.com/aspyct/blog/2012/07/15/unix-semaphores-ipc-example-in-c/"/>
    <updated>2012-07-15T16:00:00+02:00</updated>
    <id>http://aspyct.github.com/aspyct/blog/2012/07/15/unix-semaphores-ipc-example-in-c</id>
    <content type="html"><![CDATA[<p>On my way to learn *nix stuff, I just wrote a little example on <a href="https://gist.github.com/3118858">how to use semaphores in a UNIX</a> environment.</p>

<p>Hope you'll find this interesting, feel free to comment or reuse :)</p>
]]></content>
  </entry>
  
</feed>
